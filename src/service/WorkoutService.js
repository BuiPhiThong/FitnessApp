// src/services/WorkoutService.js
import { useState, useEffect } from 'react';
const API_URL = 'http://10.33.8.133:9999/workouts'; // ƒê·ªãa ch·ªâ ƒë√∫ng c·ªßa JSON Server

// H√†m l·∫•y danh s√°ch b√†i t·∫≠p ph√π h·ª£p cho t·ª´ng user
const getWorkoutsForUser = (user, exercises, levelExercises) => {
    // T√¨m b√†i t·∫≠p theo levelId c·ªßa user
    const userExercises = levelExercises
        .filter(le => le.levelId === user.levelId)
        .map(le => {
            const exerciseDetail = exercises.find(e => e.id === le.exerciseId);
            return {
                ...exerciseDetail,
                sets: le.sets,
                reps: le.reps
            };
        });

    return {
        userId: user.id,
        name: `${user.name} - K·∫ø ho·∫°ch t·∫≠p luy·ªán`,
        date: new Date().toISOString().split('T')[0], // Ng√†y hi·ªán t·∫°i
        duration: "60 ph√∫t",
        exercises: userExercises,
        notes: `Ch∆∞∆°ng tr√¨nh t·∫≠p luy·ªán d√†nh cho ${user.goal} - Tr√¨nh ƒë·ªô ${user.levelId}`
    };
};

// H√†m g√°n b√†i t·∫≠p cho t·∫•t c·∫£ user
const assignWorkoutsToUsers = (users, exercises, levelExercises) => {
    return users.map(user => getWorkoutsForUser(user, exercises, levelExercises));
};

// H√†m l∆∞u danh s√°ch b√†i t·∫≠p l√™n json-server
const saveWorkoutsToServer = async (workouts) => {
    try {
        const response = await fetch('http://10.33.8.133:9999/workouts', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(workouts),
        });

        const result = await response.json();
        console.log("‚úÖ D·ªØ li·ªáu t·∫≠p luy·ªán ƒë√£ ƒë∆∞·ª£c l∆∞u!", result);
    } catch (error) {
        console.error("‚ùå L·ªói khi l∆∞u b√†i t·∫≠p:", error);
    }
};

// Hook ƒë·ªÉ g·ªçi d·ªØ li·ªáu t·ª´ server
const useWorkoutData = () => {
    const [workouts, setWorkouts] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    useEffect(() => {
        const fetchWorkouts = async () => {
            try {
                const response = await fetch(API_URL);

                if (!response.ok) {
                    throw new Error(`L·ªói m·∫°ng: ${response.status} - ${response.statusText}`);
                }

                const data = await response.json();
                
                // üõ†Ô∏è ƒê·∫£m b·∫£o d·ªØ li·ªáu tr·∫£ v·ªÅ l√† m·ªôt m·∫£ng (tr√°nh l·ªói undefined)
                setWorkouts(Array.isArray(data) ? data : []);
                console.log("‚úÖ D·ªØ li·ªáu b√†i t·∫≠p:", data);
            } catch (error) {
                console.error("‚ùå L·ªói khi t·∫£i b√†i t·∫≠p:", error);
                setError(error.message);
                setWorkouts([]); // Tr√°nh b·ªã undefined
            } finally {
                setLoading(false);
            }
        };

        fetchWorkouts();
    }, []);

    return { workouts, loading, error };
};


export { getWorkoutsForUser, assignWorkoutsToUsers, saveWorkoutsToServer, useWorkoutData };
